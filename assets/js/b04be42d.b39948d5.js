"use strict";(self.webpackChunkevent_reservation_app_docs=self.webpackChunkevent_reservation_app_docs||[]).push([[2130],{1411:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"backend/arquitectura/adrs/adr-0007-serilog-para-logging","title":"ADR 0007:Implementaci\xf3n de Serilog para Logging","description":"Fecha:* 2025-08-18","source":"@site/docs/backend/arquitectura/adrs/adr-0007-serilog-para-logging.md","sourceDirName":"backend/arquitectura/adrs","slug":"/backend/arquitectura/adrs/adr-0007-serilog-para-logging","permalink":"/EventResourceReservationAppDocs/docs/backend/arquitectura/adrs/adr-0007-serilog-para-logging","draft":false,"unlisted":false,"editUrl":"https://github.com/jose-angell/EventResourceReservationAppDocs/docs/backend/arquitectura/adrs/adr-0007-serilog-para-logging.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"ADR 0007:Implementaci\xf3n de Serilog para Logging"},"sidebar":"backendSidebar","previous":{"title":"ADR 0006:Implementaci\xf3n del Patr\xf3n Result","permalink":"/EventResourceReservationAppDocs/docs/backend/arquitectura/adrs/adr-0006-patron-result"},"next":{"title":"Guia Creacion de Features","permalink":"/EventResourceReservationAppDocs/docs/backend/Features/feature-guidelines"}}');var r=a(4848),s=a(8453);const o={sidebar_position:8,title:"ADR 0007:Implementaci\xf3n de Serilog para Logging"},l="ADR 0007:  Implementaci\xf3n de Serilog para Logging",c={},t=[{value:"Contexto",id:"contexto",level:2},{value:"Decisi\xf3n",id:"decisi\xf3n",level:2},{value:"Alternativas Consideradas",id:"alternativas-consideradas",level:2},{value:"Consecuencias",id:"consecuencias",level:2},{value:"Positivas (+)",id:"positivas-",level:3},{value:"Negativas (-)",id:"negativas--",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"adr-0007--implementaci\xf3n-de-serilog-para-logging",children:"ADR 0007:  Implementaci\xf3n de Serilog para Logging"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fecha:"})," 2025-08-18"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Estado:"})," [Aceptada]"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"contexto",children:"Contexto"}),"\n",(0,r.jsxs)(n.p,{children:["En una aplicaci\xf3n moderna, un sistema de logging robusto es esencial para la depuraci\xf3n, el monitoreo y la comprensi\xf3n del comportamiento en producci\xf3n. La plataforma ASP.NET Core ya tiene un sistema de logging integrado (",(0,r.jsx)(n.code,{children:"Microsoft.Extensions.Logging"}),") que proporciona una interfaz com\xfan (",(0,r.jsx)(n.code,{children:"ILogger<T>"}),"). Sin embargo, su implementaci\xf3n por defecto para la consola o debug no es adecuada para un entorno de producci\xf3n que requiere formatos estructurados y destinos de log avanzados (como archivos, bases de datos o servicios de agregaci\xf3n)."]}),"\n",(0,r.jsxs)(n.p,{children:["Para ",(0,r.jsx)(n.code,{children:"EventResourceReservationApp"}),", necesitamos una soluci\xf3n de logging que sea:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Estructurada"}),": Para facilitar la b\xfasqueda y el an\xe1lisis."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexible"}),": Para enviar logs a m\xfaltiples destinos (consola en desarrollo, un servicio de agregaci\xf3n en producci\xf3n)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Eficiente"}),": Con un bajo impacto en el rendimiento."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desacoplada"}),": Para no introducir dependencias directas en las capas de Dominio y Aplicaci\xf3n."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"decisi\xf3n",children:"Decisi\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["Se ha decidido implementar Serilog como el motor de logging subyacente para la aplicaci\xf3n. Serilog ser\xe1 el proveedor concreto del sistema ",(0,r.jsx)(n.code,{children:"Microsoft.Extensions.Logging"}),", lo que nos permitir\xe1 usar ",(0,r.jsx)(n.code,{children:"ILogger<T>"})," en toda la aplicaci\xf3n, mientras aprovechamos las potentes caracter\xedsticas de Serilog."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Integraci\xf3n con la Arquitectura Limpia:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capa de Infraestructura y Proyecto de API:"})," La configuraci\xf3n de Serilog y la instalaci\xf3n de sus paquetes (los llamados sinks) se realizar\xe1 en el proyecto de la API, que es el punto de entrada de la aplicaci\xf3n. Esto mantiene a Serilog como un detalle de la infraestructura."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capa de Aplicaci\xf3n:"})," En los handlers y servicios de la capa de Aplicaci\xf3n, se inyectar\xe1 la interfaz est\xe1ndar de .NET, ",(0,r.jsx)(n.code,{children:"ILogger<T>"}),". Esta capa solo sabr\xe1 c\xf3mo registrar logs, pero no qu\xe9 tecnolog\xeda subyacente se utiliza."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Caracter\xedsticas Clave de Serilog a Utilizar:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sinks:"})," Se configurar\xe1n sinks para la consola (en desarrollo) y archivos (en producci\xf3n). Se considerar\xe1n otros sinks como PostgreSQL o Seq en el futuro."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Structured Logging:"})," Se usar\xe1 el logging estructurado para registrar objetos y propiedades de forma organizada, lo que es invaluable para el an\xe1lisis de logs. Por ejemplo, en lugar de ",(0,r.jsx)(n.code,{children:'"Creando categor\xeda con nombre: " + category.Name, se usar\xe1'})," ",(0,r.jsx)(n.code,{children:'"Creando categor\xeda con nombre: {CategoryName}"'}),", y Serilog almacenar\xe1 CategoryName como un campo en el log."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"alternativas-consideradas",children:"Alternativas Consideradas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logging por defecto de .NET:"})," Se descart\xf3 porque su implementaci\xf3n b\xe1sica es insuficiente para la producci\xf3n. No ofrece un logging estructurado eficiente ni la flexibilidad necesaria para m\xfaltiples destinos sin escribir mucho c\xf3digo personalizado."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NLog:"})," Se consider\xf3 como una alternativa v\xe1lida a Serilog. Ambos son excelentes para el logging estructurado. Se opt\xf3 por Serilog debido a su popularidad y gran cantidad de sinks disponibles, pero la decisi\xf3n de usar NLog en su lugar no habr\xeda afectado negativamente la arquitectura. La elecci\xf3n entre ambos es en gran parte una cuesti\xf3n de preferencia."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"consecuencias",children:"Consecuencias"}),"\n",(0,r.jsx)(n.p,{children:"Describe los pros y los contras de la decisi\xf3n tomada. \xbfQu\xe9 se gana y qu\xe9 se pierde? \xbfQu\xe9 implicaciones tiene para el futuro?"}),"\n",(0,r.jsx)(n.h3,{id:"positivas-",children:"Positivas (+)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desacoplamiento:"})," El uso de ",(0,r.jsx)(n.code,{children:"ILogger<T>"})," garantiza que las capas de Dominio y Aplicaci\xf3n no tengan dependencias directas de Serilog, permitiendo un cambio de proveedor de logging en el futuro si fuera necesario."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendimiento:"})," Serilog est\xe1 optimizado para la escritura de logs en entornos de alto rendimiento."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"An\xe1lisis de Datos:"})," El formato de log estructurado facilita enormemente el an\xe1lisis y la visualizaci\xf3n de logs en herramientas externas."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibilidad:"})," La arquitectura de sinks de Serilog permite configurar f\xe1cilmente m\xfaltiples destinos para los logs sin cambiar el c\xf3digo de la aplicaci\xf3n."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"negativas--",children:"Negativas (-)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complejidad de Configuraci\xf3n:"})," La configuraci\xf3n inicial puede ser m\xe1s compleja que el logging por defecto. Sin embargo, esta es una inversi\xf3n necesaria para la robustez a largo plazo."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Incompatibilidad:"})," Aunque poco com\xfan, puede haber incompatibilidad entre Serilog y algunos sinks si no se mantienen las versiones actualizadas.\r\n-",(0,r.jsx)(n.strong,{children:"Sobrecarga de C\xf3digo:"})," La inyecci\xf3n de ",(0,r.jsx)(n.code,{children:"ILogger<T>"})," en cada clase puede parecer repetitiva, pero es una pr\xe1ctica est\xe1ndar que mejora la mantenibilidad y la capacidad de prueba."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>l});var i=a(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);